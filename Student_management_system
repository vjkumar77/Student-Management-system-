
# class of student 
class Student:
    # constructor of class student
    def __init__(self,name,rollno,m1,m2):
        self.name = name
        self.rollno = rollno
        self.m1 = m1
        self.m2 = m2
        
   #to accept data from user 
    def accept(self, Name, Rollno, marks1, marks2):
        a= Student(Name, Rollno, marks1, marks2)
        l.append(a)
      
   # Display the student list
    def display(self, obj):
        
        if len(l)==0:
            print("No Student data")
            
        else:     
           print("Name : ", obj.name)
           print("RollNo : ", obj.rollno)
           print("Marks1 : ", obj.m1)
           print("Marks2 : ", obj.m2)
           print("\n")
   
  # Update the student roll no.
    def update(self, old_roll,new_roll):
        i = obj1.search(old_roll)
        roll = new_roll
        l[i].rollno = roll
 
     #search the student by its roll no. 
    def search(self, rn):
        for i in range(len(l)):
            if(l[i].rollno == rn):
                return i
            
   # Delete the student by its roll no.      
    def delete(self, rn):
        i = obj1.search(rn)
        del l[i]
 
# empty object to access  method og class  
obj1=Student('',0,0,0)


#list that store object of each student
l = []
obj1.accept("ajay", 1, 60, 65)
obj1.accept("veer", 2, 56, 95)
obj1.accept("anushka", 3, 84, 82)
print("\n")


# display student list

print("\nStudents list:\n")
for i in range(len(l)):
    obj1.display(l[i])
    
    
#search the student  by its rollno
s = obj1.search(2)
obj1.display(l[s])

#delete student from record by rollno
obj1.delete(2)
print("length of list:",len(l))

# print list after deletion
print("\nList after deletion")
for i in range(l.__len__()):
    obj1.display(l[i])
    
    
# update Roll-no
obj1.update(3, 4)
print("length of list:",len(l))
print("\n list after updation")
for i in range(len(l)):
    obj1.display(l[i])

